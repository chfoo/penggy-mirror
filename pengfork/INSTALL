penggy 0.2.1 INSTALL instructions
=================================

 1. Introduction
 ===============

  DISCLAIMER:
    AOL is a registered trademark of America Online, Inc.
    Penggy is not endorsed by or affiliated with the AOL trademark.

  Penggy is a free UNIX client for AOL. It allows UNIX users to connect
  to the Internet using AOL, through an IP tunneling system.

  Right now, dialup and TCP/IP connections are supported. It should work
  on Linux and BSD platforms.
  It is based on a reverse-engineering of the P3 protocol, therefore 
  nothing was disassembled. It is a continuation of the Peng project, 
  which was abandonned. Everything was totally rewritten from scratch, and
  the P3 implementation is more rigorous than before. The authors do not
  take responsibilty for any damage this program could cause to your 
  computer. In other words, if you computer suddenly blows up, starts 
  dancing to the song that's on the radio, or calls you names, you are 
  responsible.

  It is provided as a command-line tool. No GUI is currently available.

 2. Requirements
 ===============

  2.1. Universal TUN/TAP device driver¹ (Linux)
  ============================================

  Penggy uses the Universal TUN/TAP device driver, written by 
  Maxim Krasnyansky.

  Make sure that "Universal TUN/TAP device driver support" is enabled in
  your kernel.

  If TUN/TAP support is already present and penggy still has trouble with
  it, follow these instructions:

  Create device node:
     # mknod /dev/net/tun c 10 200

  Driver module autoloading :
     Make sure that "Kernel module loader" - module auto-loading support is
     enabled in your kernel. 

     Add the following line to the /etc/modules.conf:
        alias char-major-10-200 tun
     
     Run:
       # depmod -a 

     The driver will be automatically loaded whenever the application 
     tries to access /dev/net/tun.
     
  ¹: on BSD platform you have nothing to do, except if you installed a tuned
    kernel without TUN/TAP support. Otherwise the GENERIC kernel have support
    for TUN/TAP.

  2.2. Guile, Project GNU's extension language library
  ====================================================

  You must install libguile and libguile-dev packages on your system in
  order to be able to run and compile penggy.

  The Guile WWW page is at
    http://www.gnu.org/software/guile/guile.html

  If you don't have a packaging system on your distribution or you
  can't find them, the latest official Guile release should be available
  via anonymous FTP from
    ftp://ftp.gnu.org/pub/gnu/guile/


 3. Installation
 ===============

  Penggy can be obtained at https://savannah.nongnu.org/projects/pengfork/

  Make sure to download the last stable version. If you feel more 
  adventurous, you can try the CVS version, but this is not guaranteed
  to work.

  Installation is quite simple. Get the package, which is provided as 
  a .tar.gz archive, and put it somewhere on your system. Now you need to 
  uncompress and untar the files contained within the archive. That can be 
  done very simply (we'll assume your archive is version 0.2.1)

  $ tar xvzf penggy-0.2.1.tar.gz

  The files should have been decompressed to a directory called penggy-0.2.1
  You now need to go to that directory and compile the program :

  $ cd penggy-0.2.1
  $ ./configure
  $ make
  $ make install

  NOTE REGARDING DEFAULT DIRECTORIES:
    Now everything is installed under $prefix (which default is /usr/local),
    so configuration is under $prefix/etc/penggy !
    This is the normal configure behaviour. I realize it may be annoying for
    some users but this may be changed with configure parameters.
    Example:
      $ ./configure --sysconfdir=/etc
    (this is the parameters to give to have the previous default behaviour)

  If you need any particular option, such as cross-compiling, you can get 
  some help by typing :

  $ ./configure --help

  Now penggy should be compiled and installed. But we're not all set yet. 
  We still need to configure it.

 4. Configuration
 ================

  In this section we assume your configuration directory is /etc.
  During the install process, the /etc/penggy directory was created, and it
  has withing it several files we need to look at.

  If these files were previously installed on your system, the install process
  will not overwrite them but will create files with .new suffixes instead.

  Last step is configuration. Quite many options are available here.

  You need to modify your configuration files and make them look like as 
  follows :

  In /etc/penggy/aol-secrets put your AOL account(s) information :
    [YourScreenName]	[YourPassword]
    [AnotherScreenName]	[AnotherPassword]
    ....
    
  In /etc/penggy/phonetab put your AOL dialup number(s) :
      [YourAOLDialupNumber]
      [AnAlternativeOne]	          
      ....
	      
  The file /etc/penggy/penggy.cfg is self-documented but the most commonly
  used options are:

    screen_name = [YourScreenName]
    # auto_reconnect = yes
    # daemon = yes
    modem_device = /dev/modem (Note : If this doesn't work, you might want
                               to try /dev/ttyS0)

  Depending on your modem, you might need to change the initialization 
  strings using initstr1 to initstr9 parameters.
  You can configure penggy to automatically redial (or reconnect) if you 
  get disconnected, by activating the corresponding option. You can also 
  set it to run as a daemon.


 5. Usage
 ========

  Most of the options available in the congiguration file can be overidden
  from the command line. For more information type :
    $ penggy --help        

  The last step after compiling, installing and configuring is running the
  software, and praying for it to work :
    $ penggy

  PENGGY MUST BE RUN AS ROOT. If you're looking for a way to run it as a user
  the use of sudo is greatly recommended (see sudo(8) and sudoers(5))

  Have fun!

  * If you encounter any problems, or need additional help, you can go to
     http://www.peng.apinc.org/forum

 6. About
 ========

  This little install guide was written by Pascal Roget <pascal@epascal.net>. 
  If you have any suggestion or want to report a typo or just chat, feel 
  free to send me an email. I am very likely to respond, and I like getting 
  mail :)

  The program itself was coded by Jean-Charles Salzeber <chupa@penggy.org>. 
  Greetings to him and to his genius :)
  
  Last update : Feb 08th, 2003.
  Reviewed by Jean-Charles
